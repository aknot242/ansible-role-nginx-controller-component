{
    "desiredState": {
        "ingress": {
            "uris": {
                "{{ingress_uri}}": { 
                    matchMethod: ( PREFIX, REGEX, REGEX_CASE_SENSITIVE, SUFFIX, EXACT )
                    tls: {
                        certRef:
                        protocols:
                        cipher:
                        preferServiceCipherServiceConfigState: (ENABLED, DISABLED)
                        sessionCache: (OFF, NONE, BUILTIN, SHARED)
                    }
                }
            },
            "methods": [ POST, GET, PUT, DELETE, PATCH, HEAD, TRACE, OPTIONS, CONNECT ],
            "headers": [  ],
            "http2": (ENABLED, DISABLED),
            "spdy": (ENABLED, DISABLED),
            "proxyProtocol": (ENABLED, DISABLED),
            "setFib": int,
            "fastOpen": int,
            "backlog": int,
            "receiveBufferSize": string,
            "sendBufferSize": string,
            "acceptFilter": (DATA_READY, HTTP_READY),
            "deferred": (ENABLED, DISABLED),
            "isIpv6Only": bool,
            "reusePort": (ENABLED, DISABLED),
            "tls": { 
                certRef: 
                protocols: 
                cipher: 
                preferServiceCipherServiceConfigState: (ENABLED, DISABLED) 
                sessionCache: (OFF, NONE, BUILTIN, SHARED)
            },
            "notFoundStatusCode": int,
            "gatewayRefs": [],
            "tcpKeepAlive": {
                state: (ENABLED, DISABLED)
                idle: string
                interval: string
                count: int
            }
        },
        "egress": {
            "workloads": {
{% for workload in workloads %}
                "{{workload.uri}}": {}{% if not loop.last %},
{% endif %}
{% endfor %}{{''}},
            },
            "persistence": {
{% if workload_persistence %}
                "cookie_persistence": "{{workload_persistence}}"
{% endif %}
            },
            "load_balancing_method": "ROUNDROBIN",
            "monitors": {
                "{{workload_monitor_protocol}}": {
                    "interval_seconds": 10,
                    "consecutive_success_threshold": 2,
                    "consecutive_failure_threshold": 2,
                    "response": {
                        "timeout_seconds": 7
                    }
                }
            }
        }
    }
}
